buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.0'
        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
    }
}

apply plugin: 'android-library'
apply plugin: 'android-test'
apply plugin: 'maven'

android {
    compileSdkVersion 18
    buildToolsVersion '18.1.1'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 14
    }
}

dependencies {
    repositories {
        mavenCentral()
    }
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.1.+'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
            pom.artifactId = "sdk"
        }
    }
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.allJava
    classpath = files(android.plugin.runtimeJarList)
}

task generateJar(type: Copy) {
    from('build/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename('classes.jar', "${project.name}-${project.version}.jar")
}

task generateSourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.allSource
}

task generateJavadocsJar(dependsOn: generateJavadocs, type: Jar) {
    classifier = 'javadoc'
    from generateJavadocs.destinationDir
}

task install(dependsOn: uploadArchives)
install.configuration = configurations

def jarFileName = file("build/libs/${project.name}-${project.version}.jar")

artifacts {
    archives generateJavadocsJar
    archives generateSourceJar
    archives jarFileName
}

assemble.dependsOn(generateJar)
assemble.dependsOn(generateSourceJar)
assemble.dependsOn(generateJavadocsJar)